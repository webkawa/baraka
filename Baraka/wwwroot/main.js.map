{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/layout.root.cpn.html","webpack:///./src/app/components/layout.root.cpn.less","webpack:///./src/app/components/layout.root.cpn.ts","webpack:///./src/app/components/pages.home.cpn.html","webpack:///./src/app/components/pages.home.cpn.less","webpack:///./src/app/components/pages.home.cpn.ts","webpack:///./src/app/components/pages.login.cpn.html","webpack:///./src/app/components/pages.login.cpn.less","webpack:///./src/app/components/pages.login.cpn.ts","webpack:///./src/app/components/pages.view.cpn.html","webpack:///./src/app/components/pages.view.cpn.less","webpack:///./src/app/components/pages.view.cpn.ts","webpack:///./src/app/dto/authentication.session.dto.ts","webpack:///./src/app/dto/user.dto.ts","webpack:///./src/app/internals/loader.interceptor.ts","webpack:///./src/app/internals/root.interceptor.ts","webpack:///./src/app/internals/token.interceptor.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/state.service.ts","webpack:///./src/app/services/translator.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ0D;AACb;AAC8B;AAClC;AACa;AAEa;AACD;AAGD;AACD;AACD;AACI;AACH;AAmChE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+EAAmB;gBACnB,4EAAiB;gBACjB,8EAAkB;gBAClB,6EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC;oBACnB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,4EAAiB,EAAE;oBAC9C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,8EAAkB,EAAE;oBAChD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6EAAiB,EAAE;oBAClD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;iBACrD,CAAC;aACH;YACD,SAAS,EAAE,CAAC;oBACV,OAAO,EAAE,sEAAiB;oBAC1B,WAAW,EAAE,gFAAiB;oBAC9B,KAAK,EAAE,IAAI;iBACZ,EAAE;oBACD,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,2EAAe;oBACzB,KAAK,EAAE,IAAI;iBACZ,EAAE;oBACD,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,6EAAgB;oBAC1B,KAAK,EAAE,IAAI;iBACV,CAAC;YACJ,SAAS,EAAE,CAAC,+EAAmB,CAAC;SACjC,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjDtB,oDAAoD,0BAA0B,iI;;;;;;;;;;;ACA9E,8BAA8B,qBAAqB,cAAc,iBAAiB,sBAAsB,oBAAoB,aAAa,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1F;AACA;AACQ;AAEiB;AAEP;AAEpE,8BAA8B;AAM9B;IAKE,6BACU,IAAgB,EAChB,MAAc,EACd,MAAyB,EACzB,cAAqC;QAHrC,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAmB;QACzB,mBAAc,GAAd,cAAc,CAAuB;IAC/C,CAAC;IAEM,sCAAQ,GAAf;QAAA,iBAyBC;QAxBC,OAAO;QACP,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;QAElC,0BAA0B;QAC1B,IAAI,CAAC,cAAc;aAChB,cAAc,EAAE;aAChB,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,MAAM;aACR,MAAM;aACN,SAAS,CAAC,UAAC,IAAI;YACd,EAAE,CAAC,CAAC,IAAI,YAAY,+DAAe,CAAC,CAAC,CAAC;gBACpC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,sBAAsB;QACtB,IAAI,CAAC,MAAM;aACR,SAAS,EAAE;aACX,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACK,8CAAgB,GAAxB,UAAyB,GAAW;QAClC,EAAE,CAAC,CAAC,GAAG,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IA/CU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAOgB,+DAAU;YACR,sDAAM;YACN,+EAAiB;YACT,sFAAqB;OATpC,mBAAmB,CAgD/B;IAAD,0BAAC;CAAA;AAhD+B;;;;;;;;;;;;ACdhC,gLAAgL,WAAW,KAAK,6BAA6B,+B;;;;;;;;;;;ACA7N,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiE;AAER;AAIkB;AAClB;AACU;AAGnE,qBAAqB;AAMrB;IAIE,2BACS,KAAmB,EACnB,MAAc,EACd,cAAqC,EACrC,UAA6B,EAC5B,EAAkB;QAL5B,iBAiBC;QAhBQ,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAuB;QACrC,eAAU,GAAV,UAAU,CAAmB;QAC5B,OAAE,GAAF,EAAE,CAAgB;QAE1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAM;YACzB,gBAAgB;YAChB,KAAI,CAAC,KAAK;iBACP,QAAQ,EAAE;iBACV,SAAS,CAAC,UAAC,KAAK;gBACf,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;IACJ,CAAC;IArBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAMgB,oEAAY;YACX,sDAAM;YACE,sFAAqB;YACzB,8EAAiB;YACxB,8DAAc;OATjB,iBAAiB,CAsB7B;IAAD,wBAAC;CAAA;AAtB6B;;;;;;;;;;;;ACjB9B,skB;;;;;;;;;;;ACAA,uBAAuB,qBAAqB,GAAG,YAAY,eAAe,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ;AAEU;AAClB;AACA;AAEzD,wBAAwB;AAMxB;IAKE,4BACS,cAAqC,EACpC,KAAmB,EACnB,MAAc,EACd,EAAkB;QAJ5B,iBAoBC;QAnBQ,mBAAc,GAAd,cAAc,CAAuB;QACpC,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAgB;QAE1B,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAM;YACzB,gBAAgB;YAChB,KAAI,CAAC,cAAc;iBAChB,cAAc,EAAE;iBAChB,SAAS,CAAC,UAAC,IAAI;gBACd,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,KAAK;yBACP,SAAS,EAAE;yBACX,SAAS,CAAC,UAAC,IAAI;wBACd,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAzBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAOyB,sFAAqB;YAC7B,oEAAY;YACX,sDAAM;YACV,8DAAc;OATjB,kBAAkB,CA0B9B;IAAD,yBAAC;CAAA;AA1B8B;;;;;;;;;;;;ACZ/B,uCAAuC,WAAW,oB;;;;;;;;;;;ACAlD,uBAAuB,qBAAqB,GAAG,YAAY,eAAe,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAGP;AACA;AAGzD,0BAA0B;AAM1B;IAIE,2BACU,KAAmB,EACnB,EAAkB;QAF5B,iBAgBC;QAfS,UAAK,GAAL,KAAK,CAAc;QACnB,OAAE,GAAF,EAAE,CAAgB;QAE1B,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAM;YACzB,gBAAgB;YAChB,KAAI,CAAC,KAAK;iBACP,QAAQ,EAAE;iBACV,SAAS,CAAC,UAAC,KAAK;gBACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACtC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAChC,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACvB,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IApBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAMiB,oEAAY;YACf,8DAAc;OANjB,iBAAiB,CAsB7B;IAAD,wBAAC;CAAA;AAtB6B;;;;;;;;;;;;;;;;ACbO;AAErC;IAAA;QACS,cAAS,GAAY,KAAK,CAAC;QAC3B,UAAK,GAAW,EAAE,CAAC;QACnB,SAAI,GAAY,IAAI,iDAAO,EAAE,CAAC;IACvC,CAAC;IAAD,+BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACND;AAAA;IAAA;QACS,UAAK,GAAW,EAAE,CAAC;QACnB,UAAK,GAAW,EAAE,CAAC;QACnB,kBAAa,GAAyB,IAAI,oBAAoB,EAAE,CAAC;IAC1E,CAAC;IAAD,cAAC;AAAD,CAAC;;AAED;IAAA;QACS,YAAO,GAAW,EAAE,CAAC;IAC9B,CAAC;IAAD,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPkD;AACS;AAKvB;AAErC,4CAA4C;AAI5C;IAKE;QACE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,+CAA+C;IACxC,qCAAS,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IACpC,CAAC;IAEM,qCAAS,GAAhB,UAAiB,OAAyB,EAAE,IAAiB;QAA7D,iBAkBC;QAjBC,MAAM,CAAC,IAAI;aACR,MAAM,CAAC,OAAO,CAAC;aACf,IAAI,CAAC,0DAAG,CAAC,UAAC,IAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,WAAW;gBACX,KAAI,CAAC,KAAK,EAAE,CAAC;gBACb,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzB,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,KAAK,EAAE,CAAC;gBACb,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;YACH,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAjCU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,iBAAiB,CAmC7B;IAAD,wBAAC;CAAA;AAnC6B;;;;;;;;;;;;;;;;;;;;;;ACZqB;AAMnD,4DAA4D;AAI5D;IAAA;IASA,CAAC;IAPQ,mCAAS,GAAhB,UAAiB,OAAyB,EAAE,IAAiB;QAC3D,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC1B,GAAG,EAAE,WAAW,GAAG,OAAO,CAAC,GAAG;SAC/B,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAPU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,eAAe,CAS3B;IAAD,sBAAC;CAAA;AAT2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVuB;AAGwB;AACE;AAG7E,uBAAuB;AAIvB;IAIE,0BACU,cAAqC;QAD/C,iBASC;QARS,mBAAc,GAAd,cAAc,CAAuB;QAE7C,IAAI,CAAC,WAAW,GAAG,IAAI,wFAAwB,EAAE,CAAC;QAClD,IAAI,CAAC,cAAc;aAChB,cAAc,EAAE;aAChB,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,oCAAS,GAAhB,UAAiB,OAAyB,EAAE,IAAiB;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;YAC/B,IAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC7B,UAAU,EAAE;oBACV,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;iBAChC;aACF,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IA1BU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,sFAAqB;OALpC,gBAAgB,CA4B5B;IAAD,uBAAC;CAAA;AA5B4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqB;AACC;AACS;AAEiB;AAE9B;AAE/C,iCAAiC;AAIjC;IAIE,+BACU,IAAgB,EAChB,KAAmB;QADnB,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAc;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,oDAAe,CAAC,IAAI,wFAAwB,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,0CAA0C;IACnC,8CAAc,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,uCAAO,GAAd,UAAe,IAAY,EAAE,QAAgB;QAA7C,iBAWC;QAVC,EAAE,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI;iBACN,GAAG,CAA2B,oBAAoB,GAAG,IAAI,GAAG,YAAY,GAAG,QAAQ,CAAC;iBACpF,SAAS,CAAC,UAAC,IAAI;gBACd,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAED,gCAAgC;IACzB,0CAAU,GAAjB;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,wFAAwB,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,GAAG,CAA2B,iBAAiB,CAAC,CAAC;IAC7D,CAAC;IArCU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMgB,+DAAU;YACT,2DAAY;OANlB,qBAAqB,CAsCjC;IAAD,4BAAC;CAAA;AAtCiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiB;AACD;AACoB;AAClC;AAMpC,qBAAqB;AAIrB;IAIE,sBACS,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,iCAAiC;IAC1B,+BAAQ,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;IACnC,CAAC;IAED,6CAA6C;IACtC,gCAAS,GAAhB;QACE,MAAM,CAAC,qDAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,wBAAwB;IACjB,gCAAS,GAAhB;QAAA,iBAOC;QANC,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAY,WAAW,CAAC;aAC3B,IAAI,CAAC,0DAAG,CAAC,UAAC,IAAI;YACb,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IA3BU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMe,+DAAU;OALd,YAAY,CA4BxB;IAAD,mBAAC;CAAA;AA5BwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACb0B;AAMc;AAIjE,4BAA4B;AAI5B;IAIE,2BACU,cAAqC;QAD/C,iBAQC;QAPS,mBAAc,GAAd,cAAc,CAAuB;QAE7C,IAAI,CAAC,cAAc;aAChB,cAAc,EAAE;aAChB,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAA0C;IACnC,mCAAO,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;IAC1F,CAAC;IAED;;;OAGG;IACI,qCAAS,GAAhB,UAAiB,MAAiB;QAChC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACzE,CAAC;IACM,8BAAE,GAAT,UAAU,MAAiB;QACzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IA7BU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,6EAAqB;OALpC,iBAAiB,CA+B7B;IAAD,wBAAC;CAAA;AA/B6B;;;;;;;;;;;;;;ACd9B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from \"@angular/router\"\r\n\r\nimport { LayoutRootComponent } from './components/layout.root.cpn';\r\nimport { PageLoginComponent } from './components/pages.login.cpn';\r\n\r\nimport { AuthenticationService } from './services/authentication.service'\r\nimport { TokenInterceptor } from './internals/token.interceptor';\r\nimport { PageHomeComponent } from './components/pages.home.cpn';\r\nimport { RootInterceptor } from './internals/root.interceptor';\r\nimport { LoaderInterceptor } from './internals/loader.interceptor';\r\nimport { PageViewComponent } from './components/pages.view.cpn';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutRootComponent,\r\n    PageHomeComponent,\r\n    PageLoginComponent,\r\n    PageViewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot([\r\n      { path: 'home', component: PageHomeComponent },\r\n      { path: 'login', component: PageLoginComponent },\r\n      { path: 'view/:id', component: PageViewComponent },\r\n      { path: '', redirectTo: '/home', pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useExisting: LoaderInterceptor, /* useExisting pour utiliser une instance de service existante */\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: RootInterceptor,\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptor,\r\n    multi: true\r\n    }],\r\n  bootstrap: [LayoutRootComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div>\\r\\n  <h1>\\r\\n    <span>yo {{ credentials.user.login }}</span>\\r\\n  </h1>\\r\\n  <router-outlet></router-outlet>\\r\\n  <div id=\\\"loader\\\" *ngIf=\\\"loading\\\">Chargement</div>\\r\\n</div>\\r\\n\"","module.exports = \"div#loader {\\n  background: #444;\\n  bottom: 0;\\n  color: white;\\n  font-weight: bold;\\n  position: fixed;\\n  right: 0;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationStart } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { AuthenticationSessionDTO } from '../dto/authentication.session.dto';\r\nimport { LoaderInterceptor } from '../internals/loader.interceptor';\r\n\r\n/** Racine de l'application */\r\n@Component({\r\n  selector: 'layout-root',\r\n  templateUrl: './layout.root.cpn.html',\r\n  styleUrls: ['./layout.root.cpn.less']\r\n})\r\nexport class LayoutRootComponent implements OnInit {\r\n\r\n  public credentials: AuthenticationSessionDTO;\r\n  public loading: boolean;\r\n\r\n  public constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private loader: LoaderInterceptor,\r\n    private authentication: AuthenticationService) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    // Démo\r\n    this.http.get(\"demo\").subscribe();\r\n\r\n    // Suivi des autorisations\r\n    this.authentication\r\n      .getCredentials()\r\n      .subscribe((data) => {\r\n        this.credentials = data;\r\n        this.checkCredentials(this.router.url);\r\n      });\r\n    this.router\r\n      .events\r\n      .subscribe((data) => {\r\n        if (data instanceof NavigationStart) {\r\n          this.checkCredentials(data.url);\r\n        }\r\n      });\r\n\r\n    // Suivi du chargement\r\n    this.loader\r\n      .getLoader()\r\n      .subscribe((data) => {\r\n        this.loading = data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Vérifie les droits d'accès et redirige vers la page de login.\r\n   * @param url URL courante.\r\n   */\r\n  private checkCredentials(url: string) {\r\n    if (url != \"/login\" && !this.credentials.connected) {\r\n      this.router.navigate([\"login\"]);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <h2>Salut mec</h2>\\r\\n  <p>Choisis une vue.</p>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let view of views\\\"\\r\\n        [routerLink]=\\\"['/view', view.id]\\\">{{ view.id }} : {{ translator.tr(view.label) }}</li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, AfterViewInit, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { ViewDTO } from '../dto/view.dto';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { StateService } from '../services/state.service';\r\nimport { TranslatorService } from '../services/translator.service';\r\nimport { BundleDTO } from '../dto/bundle.dto';\r\n\r\n/** Page d'accueil */\r\n@Component({\r\n  selector: 'pages-home',\r\n  templateUrl: './pages.home.cpn.html',\r\n  styleUrls: ['./pages.home.cpn.less']\r\n})\r\nexport class PageHomeComponent {\r\n\r\n  public views: ViewDTO[];\r\n\r\n  public constructor(\r\n    public state: StateService,\r\n    public router: Router,\r\n    public authentication: AuthenticationService,\r\n    public translator: TranslatorService,\r\n    private ar: ActivatedRoute) {\r\n\r\n    this.views = [];\r\n\r\n    ar.params.subscribe((params) => {\r\n      // onInit broken\r\n      this.state\r\n        .getViews()\r\n        .subscribe((views) => {\r\n          this.views = views;\r\n        });\r\n    })\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <h2>Connexion</h2>\\r\\n  <form>\\r\\n    <div>\\r\\n      <label>Login</label>\\r\\n      <input type=\\\"text\\\"\\r\\n             name=\\\"name\\\"\\r\\n             [(ngModel)]=\\\"name\\\" />\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>Mot de passe</label>\\r\\n      <input type=\\\"password\\\"\\r\\n             name=\\\"password\\\"\\r\\n             [(ngModel)]=\\\"password\\\" />\\r\\n    </div>\\r\\n    <input type=\\\"button\\\"\\r\\n           name=\\\"submit\\\"\\r\\n           value=\\\"Connexion\\\"\\r\\n           (click)=\\\"authentication.connect(name, password)\\\" />\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"div {\\n  background: pink;\\n}\\ndiv > h2 {\\n  color: red;\\n}\\n\"","import { Component, AfterViewInit, OnInit } from '@angular/core';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { StateService } from '../services/state.service';\r\n\r\n/** Mire de connexion */\r\n@Component({\r\n  selector: 'pages-login',\r\n  templateUrl: './pages.login.cpn.html',\r\n  styleUrls: ['./pages.login.cpn.less']\r\n})\r\nexport class PageLoginComponent {\r\n\r\n  public name: string;\r\n  public password: string;\r\n  \r\n  public constructor(\r\n    public authentication: AuthenticationService,\r\n    private state: StateService,\r\n    private router: Router,\r\n    private ar: ActivatedRoute) {\r\n\r\n    ar.params.subscribe((params) => {\r\n      // onInit broken\r\n      this.authentication\r\n        .getCredentials()\r\n        .subscribe((data) => {\r\n          if (data.connected) {\r\n            this.state\r\n              .loadState()\r\n              .subscribe((data) => {\r\n                this.router.navigate([\"home\"]);\r\n              });\r\n          }\r\n        });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <h2>Vue {{ view.id }}</h2>\\r\\n</div>\\r\\n\"","module.exports = \"div {\\n  background: pink;\\n}\\ndiv > h2 {\\n  color: red;\\n}\\n\"","import { Component, AfterViewInit, Input } from '@angular/core';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { StateService } from '../services/state.service';\r\nimport { ViewDTO } from '../dto/view.dto';\r\n\r\n/** Affichage d'une vue */\r\n@Component({\r\n  selector: 'pages-view',\r\n  templateUrl: './pages.view.cpn.html',\r\n  styleUrls: ['./pages.view.cpn.less']\r\n})\r\nexport class PageViewComponent {\r\n\r\n  public view: ViewDTO;\r\n\r\n  public constructor(\r\n    private state: StateService,\r\n    private ar: ActivatedRoute) {\r\n\r\n    ar.params.subscribe((params) => {\r\n      // onInit broken\r\n      this.state\r\n        .getViews()\r\n        .subscribe((views) => {\r\n          for (let i = 0; i < views.length; i++) {\r\n            if (views[i].id == params[\"id\"]) {\r\n              this.view = views[i];\r\n            }\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n}\r\n","import { UserDTO } from \"./user.dto\";\r\n\r\nexport class AuthenticationSessionDTO {\r\n  public connected: boolean = false;\r\n  public token: string = \"\";\r\n  public user: UserDTO = new UserDTO();\r\n}\r\n","export class UserDTO {\n  public login: string = \"\";\n  public email: string = \"\";\n  public configuration: UserConfigurationDTO = new UserConfigurationDTO();\n}\n\nexport class UserConfigurationDTO {\n  public culture: string = \"\";\r\n}\r\n","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { Observable, Subject, BehaviorSubject } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { AuthenticationSessionDTO } from \"../dto/authentication.session.dto\";\r\n\r\nimport { map } from \"rxjs/operators\";\r\n\r\n/** Gestion de l'indicateur de chargement */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n\r\n  private count: number;\r\n  private loader: Subject<boolean>;\r\n\r\n  public constructor() {\r\n    this.count = 0;\r\n    this.loader = new BehaviorSubject(false);\r\n  }\r\n\r\n  /** Retourne le statut courant du chargement */\r\n  public getLoader(): Observable<boolean> {\r\n    return this.loader.asObservable();\r\n  }\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next\r\n      .handle(request)\r\n      .pipe(map((data) => {\r\n        if (data.type == 0) {\r\n          /* Dafuq */\r\n          this.count++;\r\n          if (this.count == 1) {\r\n            this.loader.next(true);\r\n          }\r\n        } else {\r\n          this.count--;\r\n          if (this.count == 0) {\r\n            this.loader.next(false);\r\n          }\r\n        }\r\n        return data;\r\n      }));\r\n  }\r\n\r\n}\r\n","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { AuthenticationSessionDTO } from \"../dto/authentication.session.dto\";\r\n\r\n/* Redirection des requêtes sortantes vers \"/services/..\" */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RootInterceptor implements HttpInterceptor {\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const event = request.clone({\r\n      url: \"services/\" + request.url\r\n    });\r\n    return next.handle(event);\r\n  }\r\n\r\n}\r\n","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { AuthenticationSessionDTO } from \"../dto/authentication.session.dto\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n/** Gestion du jeton */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  private credentials: AuthenticationSessionDTO;\r\n\r\n  public constructor(\r\n    private authentication: AuthenticationService) {\r\n\r\n    this.credentials = new AuthenticationSessionDTO();\r\n    this.authentication\r\n      .getCredentials()\r\n      .subscribe((data) => {\r\n        this.credentials = data;\r\n      });\r\n  }\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.credentials.connected) {\r\n      const modified = request.clone({\r\n        setHeaders: {\r\n          'token': this.credentials.token\r\n        }\r\n      });\r\n      return next.handle(modified);\r\n    } else {\r\n      return next.handle(request);\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\n\r\nimport { AuthenticationSessionDTO } from '../dto/authentication.session.dto';\r\nimport { UserDTO } from '../dto/user.dto';\r\nimport { StateService } from './state.service';\r\n\r\n/** Service d'authentification */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  private credentials: Subject<AuthenticationSessionDTO>\r\n\r\n  public constructor(\r\n    private http: HttpClient,\r\n    private state: StateService) {\r\n    this.credentials = new BehaviorSubject(new AuthenticationSessionDTO());\r\n  }\r\n\r\n  /** Retourne le droits d'accès courants */\r\n  public getCredentials(): Observable<AuthenticationSessionDTO> {\r\n    return this.credentials.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Tente une connexion\r\n   * @param name Login ou e-mail de l'utilisateur.\r\n   * @param password Mot de passe.\r\n   */\r\n  public connect(name: string, password: string): void {\r\n    if (name && password) {\r\n      this.http\r\n        .get<AuthenticationSessionDTO>(\"auth/connect?name=\" + name + \"&password=\" + password)\r\n        .subscribe((data) => {\r\n          this.credentials.next(data);\r\n          this.state.loadState();\r\n        });\r\n    } else {\r\n      throw new Error(\"Missing argument\");\r\n    }\r\n  }\r\n\r\n  /** Procède à la déconnexion. */\r\n  public disconnect(): void {\r\n    this.credentials.next(new AuthenticationSessionDTO());\r\n    this.http.get<AuthenticationSessionDTO>(\"auth/disconnect\");\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, forkJoin, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\n\r\n\r\nimport { ViewDTO } from '../dto/view.dto';\r\n\r\n\r\n/** Service d'état */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateService {\r\n  \r\n  private views: Subject<ViewDTO[]>\r\n\r\n  constructor(\r\n    public http: HttpClient) {\r\n    this.views = new BehaviorSubject([]);\r\n  }\r\n\r\n  /** Retourne la liste des vues */\r\n  public getViews(): Observable<ViewDTO[]> {\r\n    return this.views.asObservable();\r\n  }\r\n\r\n  /** Charge l'état complet de l'application */\r\n  public loadState(): Observable<any> {\r\n    return forkJoin(this.loadViews());\r\n  }\r\n\r\n  /** Recharge les vues */\r\n  public loadViews(): Observable<ViewDTO[]> {\r\n    return this.http\r\n      .get<ViewDTO[]>(\"views/get\")\r\n      .pipe(map((data) => {\r\n        this.views.next(data);\r\n        return data;\r\n      }));\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, forkJoin, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { ViewDTO } from '../dto/view.dto';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { AuthenticationSessionDTO } from '../dto/authentication.session.dto';\r\nimport { BundleDTO } from '../dto/bundle.dto';\r\n\r\n/** Service de traduction */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslatorService {\r\n\r\n  private credentials: AuthenticationSessionDTO;\r\n\r\n  constructor(\r\n    private authentication: AuthenticationService) {\r\n\r\n    this.authentication\r\n      .getCredentials()\r\n      .subscribe((data) => {\r\n        this.credentials = data;\r\n      });\r\n  }\r\n\r\n  /** Retourne la langue de l'utilisateur */\r\n  public getLang(): string {\r\n    return this.credentials.connected ? this.credentials.user.configuration.culture : \"FRA\";\r\n  }\r\n\r\n  /**\r\n   * Retourne la traduction appropriée pour un lot de traductions.\r\n   * @param bundle Lot de traductions\r\n   */\r\n  public translate(bundle: BundleDTO): string {\r\n    console.log(bundle);\r\n    return bundle.data[this.getLang()] ? bundle.data[this.getLang()] : \"?\";\r\n  }\r\n  public tr(bundle: BundleDTO): string {\r\n    return this.translate(bundle);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}