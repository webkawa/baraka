{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/formulars/admin/tables/field.add.form.html","webpack:///./src/app/components/formulars/admin/tables/field.add.form.less","webpack:///./src/app/components/formulars/admin/tables/field.add.form.ts","webpack:///./src/app/components/formulars/admin/tables/field.edit.form.html","webpack:///./src/app/components/formulars/admin/tables/field.edit.form.less","webpack:///./src/app/components/formulars/admin/tables/field.edit.form.ts","webpack:///./src/app/components/formulars/admin/tables/table.add.form.html","webpack:///./src/app/components/formulars/admin/tables/table.add.form.less","webpack:///./src/app/components/formulars/admin/tables/table.add.form.ts","webpack:///./src/app/components/formulars/admin/tables/table.edit.form.html","webpack:///./src/app/components/formulars/admin/tables/table.edit.form.less","webpack:///./src/app/components/formulars/admin/tables/table.edit.form.ts","webpack:///./src/app/components/formulars/persisted.abs.ts","webpack:///./src/app/components/layout/popin.cpn.html","webpack:///./src/app/components/layout/popin.cpn.less","webpack:///./src/app/components/layout/popin.cpn.ts","webpack:///./src/app/components/layout/root.cpn.html","webpack:///./src/app/components/layout/root.cpn.less","webpack:///./src/app/components/layout/root.cpn.ts","webpack:///./src/app/components/pages/home.cpn.html","webpack:///./src/app/components/pages/home.cpn.less","webpack:///./src/app/components/pages/home.cpn.ts","webpack:///./src/app/components/pages/login.cpn.html","webpack:///./src/app/components/pages/login.cpn.less","webpack:///./src/app/components/pages/login.cpn.ts","webpack:///./src/app/components/pages/view.abs.ts","webpack:///./src/app/components/pages/view.cpn.html","webpack:///./src/app/components/pages/view.cpn.less","webpack:///./src/app/components/pages/view.cpn.ts","webpack:///./src/app/components/pages/views/admin.cpn.html","webpack:///./src/app/components/pages/views/admin.cpn.less","webpack:///./src/app/components/pages/views/admin.cpn.ts","webpack:///./src/app/components/pages/views/admin/table.edit.cpn.html","webpack:///./src/app/components/pages/views/admin/table.edit.cpn.less","webpack:///./src/app/components/pages/views/admin/table.edit.cpn.ts","webpack:///./src/app/dto/authentication.session.dto.ts","webpack:///./src/app/dto/bundle.dto.ts","webpack:///./src/app/dto/entity.dto.ts","webpack:///./src/app/dto/field.dto.ts","webpack:///./src/app/dto/persisted.dto.ts","webpack:///./src/app/dto/table.dto.ts","webpack:///./src/app/dto/user.dto.ts","webpack:///./src/app/internals/exceptions.handler.ts","webpack:///./src/app/internals/exceptions.interceptor.ts","webpack:///./src/app/internals/loader.interceptor.ts","webpack:///./src/app/internals/references.interceptor.ts","webpack:///./src/app/internals/root.interceptor.ts","webpack:///./src/app/internals/token.interceptor.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/state.service.ts","webpack:///./src/app/services/translator.service.ts","webpack:///./src/app/services/validators.service.ts","webpack:///./src/app/utils/string.utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { RouterModule, Routes } from \"@angular/router\"\r\n\r\nimport { LayoutPopinComponent } from './components/layout/popin.cpn';\r\nimport { LayoutRootComponent } from './components/layout/root.cpn';\r\nimport { PageHomeComponent } from './components/pages/home.cpn';\r\nimport { PageLoginComponent } from './components/pages/login.cpn';\r\nimport { PageViewComponent } from './components/pages/view.cpn';\r\nimport { PagesViewAdminComponent } from './components/pages/views/admin.cpn';\r\nimport { LoaderInterceptor } from './internals/loader.interceptor';\r\nimport { ExceptionsInterceptor } from './internals/exceptions.interceptor';\r\nimport { RootInterceptor } from './internals/root.interceptor';\r\nimport { TokenInterceptor } from './internals/token.interceptor';\r\nimport { ReferencesInterceptor } from './internals/references.interceptor';\r\nimport { PagesViewAdminTableEditComponent } from './components/pages/views/admin/table.edit.cpn';\r\nimport { AdminTableAddFormular } from './components/formulars/admin/tables/table.add.form';\r\nimport { AdminFieldAddFormular } from './components/formulars/admin/tables/field.add.form';\r\nimport { AdminTableEditFormular } from './components/formulars/admin/tables/table.edit.form';\r\nimport { AdminFieldEditFormular } from './components/formulars/admin/tables/field.edit.form';\r\nimport { ExceptionsHandler } from './internals/exceptions.handler';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminFieldAddFormular,\r\n    AdminFieldEditFormular,\r\n    AdminTableAddFormular,\r\n    AdminTableEditFormular,\r\n    LayoutPopinComponent,\r\n    LayoutRootComponent,\r\n    PageHomeComponent,\r\n    PageLoginComponent,\r\n    PageViewComponent,\r\n    PagesViewAdminComponent,\r\n    PagesViewAdminTableEditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: 'home', component: PageHomeComponent },\r\n      { path: 'login', component: PageLoginComponent },\r\n      { path: 'view/:view', component: PageViewComponent },\r\n      { path: 'view/:view/admin', component: PagesViewAdminComponent },\r\n      { path: 'view/:view/admin/model/:action', component: PagesViewAdminTableEditComponent },\r\n      { path: 'view/:view/admin/model/:action/:id', component: PagesViewAdminTableEditComponent },\r\n      { path: '', redirectTo: '/home', pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useExisting: LoaderInterceptor, /* useExisting pour utiliser une instance de service existante */\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useExisting: ExceptionsInterceptor, /* useExisting pour utiliser une instance de service existante */\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: RootInterceptor,\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptor,\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ReferencesInterceptor,\r\n    multi: true\r\n  }, {\r\n    provide: ErrorHandler,\r\n    useClass: ExceptionsHandler\r\n  }],\r\n  bootstrap: [LayoutRootComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<form class=\\\"form-group\\\" [formGroup]=\\\"form\\\" (submit)=\\\"submit()\\\">\\r\\n  <div>\\r\\n    <label>Nom</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"label\\\" />\\r\\n    <p *ngIf=\\\"label.invalid && label.dirty\\\">Wtf is this shit ?</p>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Code</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"code\\\" />\\r\\n    <p *ngIf=\\\"code.invalid && code.dirty\\\">Wut ?</p>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Type</label>\\r\\n    <select formControlName=\\\"type\\\">\\r\\n      <option value=\\\"STRING\\\">Chaîne de caractères</option>\\r\\n      <option value=\\\"BOOLEAN\\\">Logique</option>\\r\\n      <option value=\\\"NUMERIC\\\">Nombre</option>\\r\\n      <option value=\\\"DATE\\\">Date</option>\\r\\n      <option value=\\\"REFERENCE\\\">Liaison</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"type.value == 'REFERENCE'\\\">\\r\\n    <label>Destination</label>\\r\\n    <select formControlName=\\\"reference\\\">\\r\\n      <option value=\\\"t.Id\\\"\\r\\n              *ngFor=\\\"let t of tables\\\">{{ translator.tr(t.label) }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div>\\r\\n    <input type=\\\"submit\\\"\\r\\n           value=\\\"Ajouter\\\"\\r\\n           [disabled]=\\\"form.invalid\\\" />\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, AsyncValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ValidatorsService } from '../../../../services/validators.service';\r\nimport { StringUtils } from '../../../../utils/string.utils';\r\nimport { TableDTO } from '../../../../dto/table.dto';\r\nimport { TranslatorService } from '../../../../services/translator.service';\r\nimport { StateService } from '../../../../services/state.service';\r\nimport { ViewDTO, AdminViewConfigurationDTO } from '../../../../dto/view.dto';\r\nimport { PersitedAbstractFormular } from '../../persisted.abs';\r\nimport { FieldDTO, AbstractFieldConfigurationDTO, StringFieldConfigurationDTO, BooleanFieldConfigurationDTO, DateFieldConfigurationDTO, NumericFieldConfigurationDTO, ReferenceFieldConfigurationDTO } from '../../../../dto/field.dto';\r\n\r\n/** Formulaire d'ajout d'un champ */\r\n@Component({\r\n  selector: 'admin-field-add',\r\n  templateUrl: './field.add.form.html',\r\n  styleUrls: ['./field.add.form.less']\r\n})\r\nexport class AdminFieldAddFormular extends PersitedAbstractFormular<FieldDTO<AbstractFieldConfigurationDTO>> implements OnInit {\r\n\r\n  @Input()\r\n  public table: TableDTO;\r\n\r\n  public tables: TableDTO[];\r\n  public lang: string;\r\n\r\n  public form: FormGroup;\r\n  public label: FormControl;\r\n  public code: FormControl;\r\n  public type: FormControl;\r\n  public reference: FormControl;\r\n\r\n  public constructor(\r\n    public translator: TranslatorService,\r\n    protected http: HttpClient,\r\n    private state: StateService,\r\n    private router: Router,\r\n    private ar: ActivatedRoute,\r\n    private validators: ValidatorsService) {\r\n\r\n    super(http, \"fields\");\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    /* Création du formulaire */\r\n    this.label = new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(3)]);\r\n    this.code = new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(3),\r\n      Validators.pattern(/^[a-z0-9_]+$/)\r\n    ], [this.validators.check(\"fields/check-code?table=\" + this.table.id + \"&code=\")]);\r\n    this.type = new FormControl('STRING', [Validators.required]);\r\n    this.reference = new FormControl('', []);\r\n    this.form = new FormGroup({\r\n      label: this.label,\r\n      code: this.code,\r\n      type: this.type,\r\n      reference: this.reference\r\n    });\r\n\r\n    /* Gestion du code */\r\n    this.label\r\n      .valueChanges\r\n      .subscribe((data) => {\r\n        if (!this.persisted && this.code.pristine) {\r\n          let treated = StringUtils.StringToCode(this.label.value);\r\n          this.code.setValue(treated);\r\n        }\r\n      });\r\n\r\n    /* Surveillance des tables */\r\n    this.state\r\n      .getTables()\r\n      .subscribe((data) => this.tables = data);\r\n  }\r\n\r\n  protected check(): boolean {\r\n    return this.form.valid;\r\n  }\r\n\r\n  protected provide(): FieldDTO<AbstractFieldConfigurationDTO> {\r\n    let result = new FieldDTO();\r\n    result.label = this.translator.edit(result.label, this.label.value);\r\n    result.code = this.code.value;\r\n    switch (this.type.value) {\r\n      case \"STRING\": result.configuration = new StringFieldConfigurationDTO(); break;\r\n      case \"BOOLEAN\": result.configuration = new BooleanFieldConfigurationDTO(); break;\r\n      case \"DATE\": result.configuration = new DateFieldConfigurationDTO(); break;\r\n      case \"NUMERIC\": result.configuration = new NumericFieldConfigurationDTO(); break;\r\n      case \"REFERENCE\": result.configuration = new ReferenceFieldConfigurationDTO(); break;\r\n    }\r\n    result.table.id = this.table.id;\r\n    return result;\r\n  }\r\n\r\n  protected digest(entity: FieldDTO<AbstractFieldConfigurationDTO>): void {\r\n    entity.table = this.table;\r\n\r\n    this.table.fields.push(entity);\r\n    this.state.publishTable(this.table);\r\n    this.router.navigate([\"../../edit-field\", entity.id], { relativeTo: this.ar });\r\n  }\r\n}\r\n","module.exports = \"<form class=\\\"form-group\\\" [formGroup]=\\\"form\\\" (submit)=\\\"save()\\\">\\r\\n  <h2>Editer le champ {{ field.id }}</h2>\\r\\n  <div>\\r\\n    <label>Nom</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"label\\\" />\\r\\n    <p *ngIf=\\\"label.invalid && label.dirty\\\">Wtf is this shit ?</p>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Code</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"code\\\" />\\r\\n    <p *ngIf=\\\"code.invalid && code.dirty\\\">Wut ?</p>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Archivée</label>\\r\\n    <input type=\\\"checkbox\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"archived\\\" />\\r\\n  </div>\\r\\n  <div>\\r\\n    <input type=\\\"submit\\\"\\r\\n           value=\\\"Modifier\\\"\\r\\n           [disabled]=\\\"form.invalid\\\" />\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, Inject, Input, OnChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, AsyncValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ValidatorsService } from '../../../../services/validators.service';\r\nimport { StringUtils } from '../../../../utils/string.utils';\r\nimport { TableDTO, TableConfigurationDTO } from '../../../../dto/table.dto';\r\nimport { TranslatorService } from '../../../../services/translator.service';\r\nimport { StateService } from '../../../../services/state.service';\r\nimport { ViewDTO, AdminViewConfigurationDTO } from '../../../../dto/view.dto';\r\nimport { PersitedAbstractFormular } from '../../persisted.abs';\r\nimport { FieldDTO, AbstractFieldConfigurationDTO } from '../../../../dto/field.dto';\r\n\r\n/** Formulaire d'ajout d'une table */\r\n@Component({\r\n  selector: 'admin-field-edit',\r\n  templateUrl: './field.edit.form.html',\r\n  styleUrls: ['./field.edit.form.less']\r\n})\r\nexport class AdminFieldEditFormular extends PersitedAbstractFormular<FieldDTO<AbstractFieldConfigurationDTO>> implements OnInit {\r\n\r\n  @Input()\r\n  public set field(field: FieldDTO<AbstractFieldConfigurationDTO>) {\r\n    this._field = field;\r\n    if (this.form != null && this.field != null) {\r\n      this.refresh();\r\n    }\r\n  };\r\n  public get field(): FieldDTO<AbstractFieldConfigurationDTO> {\r\n    return this._field;\r\n  };\r\n  public table: TableDTO;\r\n\r\n  public tables: TableDTO[];\r\n  public lang: string;\r\n\r\n  public form: FormGroup;\r\n  public label: FormControl;\r\n  public code: FormControl;\r\n  public archived: FormControl;\r\n  public reference: FormControl;\r\n\r\n  private _field: FieldDTO<AbstractFieldConfigurationDTO>;\r\n\r\n  public constructor(\r\n    public translator: TranslatorService,\r\n    protected http: HttpClient,\r\n    private state: StateService,\r\n    private router: Router,\r\n    private ar: ActivatedRoute,\r\n    private validators: ValidatorsService) {\r\n\r\n    super(http, \"fields\");\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    /* Gestion des références */\r\n    this.table = this.field.table;\r\n\r\n    /* Création du formulaire */\r\n    this.label = new FormControl(this.translator.tr(this.field.label), [\r\n      Validators.required,\r\n      Validators.minLength(3)]);\r\n    this.code = new FormControl(this.field.code, [\r\n      Validators.required,\r\n      Validators.minLength(3),\r\n      Validators.pattern(/^[a-z0-9_]+$/)\r\n    ], [\r\n        this.validators.check(\"fields/check-code?table=\" + this.table.id + \"&code=\", this.field.code)\r\n      ]);\r\n    this.archived = new FormControl(this.field.configuration.archived, []);\r\n    this.reference = new FormControl('', []);\r\n    this.form = new FormGroup({\r\n      label: this.label,\r\n      code: this.code,\r\n      archived: this.archived,\r\n      reference: this.reference\r\n    });\r\n\r\n    /* Surveillance des tables */\r\n    this.state\r\n      .getTables()\r\n      .subscribe((data) => this.tables = data);\r\n  }\r\n\r\n  protected check(): boolean {\r\n    this.form.updateValueAndValidity();\r\n    console.log(\"STATUS : \");\r\n    console.log(this.form);\r\n    return this.form.valid;\r\n  }\r\n\r\n  protected provide(): FieldDTO<AbstractFieldConfigurationDTO> {\r\n    let result = new FieldDTO();\r\n    result.id = this.field.id;\r\n    result.label = this.translator.edit(result.label, this.label.value);\r\n    result.code = this.code.value;\r\n    result.configuration = this.field.configuration;\r\n    result.configuration.archived = this.archived.value;\r\n    result.table.id = this.table.id;\r\n    return result;\r\n  }\r\n\r\n  protected digest(entity: FieldDTO<AbstractFieldConfigurationDTO>): void {\r\n    entity.table = this.table;\r\n    this.state.publishField(entity);\r\n  }\r\n\r\n  /** Rafraichit le contenu du formulaire. */\r\n  private refresh(): void {\r\n    if (this.form != null && this.field != null) {\r\n      console.log(\"PATCH:\" + this.field.code);\r\n      this.code.setAsyncValidators([this.validators.check(\"fields/check-code?table=\" + this.table.id + \"&code=\", this.field.code)]);\r\n\r\n      this.label.setValue(this.translator.tr(this.field.label));\r\n      this.code.setValue(this.field.code);\r\n      this.archived.setValue(this.field.configuration.archived);\r\n      this.form.updateValueAndValidity();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<form class=\\\"form-group\\\" [formGroup]=\\\"form\\\" (submit)=\\\"add()\\\">\\r\\n  <div>\\r\\n    <label>Nom</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"label\\\" />\\r\\n    <p *ngIf=\\\"label.invalid && label.dirty\\\">Wtf is this shit ?</p>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Code</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"code\\\" />\\r\\n    <p *ngIf=\\\"code.invalid && code.dirty\\\">Wut ?</p>\\r\\n  </div>\\r\\n  <div>\\r\\n    <input type=\\\"submit\\\"\\r\\n           value=\\\"Ajouter\\\"\\r\\n           [disabled]=\\\"form.invalid\\\" />\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, AsyncValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ValidatorsService } from '../../../../services/validators.service';\r\nimport { StringUtils } from '../../../../utils/string.utils';\r\nimport { TableDTO, TableConfigurationDTO } from '../../../../dto/table.dto';\r\nimport { TranslatorService } from '../../../../services/translator.service';\r\nimport { StateService } from '../../../../services/state.service';\r\nimport { ViewDTO, AdminViewConfigurationDTO } from '../../../../dto/view.dto';\r\nimport { PersitedAbstractFormular } from '../../persisted.abs';\r\n\r\n/** Formulaire d'ajout d'une table */\r\n@Component({\r\n  selector: 'admin-table-add',\r\n  templateUrl: './table.add.form.html',\r\n  styleUrls: ['./table.add.form.less']\r\n})\r\nexport class AdminTableAddFormular extends PersitedAbstractFormular<TableDTO> implements OnInit {\r\n\r\n  public lang: string;\r\n\r\n  public form: FormGroup;\r\n  public label: FormControl;\r\n  public code: FormControl;\r\n\r\n  public constructor(\r\n    public translator: TranslatorService,\r\n    protected http: HttpClient,\r\n    private state: StateService,\r\n    private router: Router,\r\n    private validators: ValidatorsService,\r\n    private ar: ActivatedRoute) {\r\n\r\n    super(http, \"tables\");\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    /* Création du formulaire */\r\n    this.label = new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(3)]);\r\n    this.code = new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(3),\r\n      Validators.pattern(/^[a-z0-9_]+$/)\r\n    ], [this.validators.check(\"tables/check-code?code=\")]);\r\n    this.form = new FormGroup({\r\n      label: this.label,\r\n      code: this.code\r\n    });\r\n\r\n    /* Gestion du code */\r\n    this.label\r\n      .valueChanges\r\n      .subscribe((data) => {\r\n        if (!this.persisted && this.code.pristine) {\r\n          let treated = StringUtils.StringToCode(this.label.value);\r\n          this.code.setValue(treated);\r\n        }\r\n      });\r\n  }\r\n\r\n  protected check(): boolean {\r\n    return this.form.valid;\r\n  }\r\n\r\n  protected provide(): TableDTO {\r\n    let result = new TableDTO();\r\n    result.label = this.translator.edit(result.label, this.label.value);\r\n    result.code = this.code.value;\r\n    result.configuration = new TableConfigurationDTO();\r\n    return result;\r\n  }\r\n\r\n  protected digest(entity: TableDTO): void {\r\n    this.state.publishTable(entity);\r\n    this.router.navigate([\"../edit-table\", entity.id], { relativeTo: this.ar });\r\n  }\r\n}\r\n","module.exports = \"<form class=\\\"form-group\\\" [formGroup]=\\\"form\\\" (submit)=\\\"save()\\\">\\r\\n  <h2>Editer la table</h2>\\r\\n  <div>\\r\\n    <label>Nom</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"label\\\" />\\r\\n    <p *ngIf=\\\"label.invalid && label.dirty\\\">Wtf is this shit ?</p>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Code</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"code\\\" />\\r\\n    <p *ngIf=\\\"code.invalid && code.dirty\\\">Wut ?</p>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Archivée</label>\\r\\n    <input type=\\\"checkbox\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           formControlName=\\\"archived\\\" />\\r\\n  </div>\\r\\n  <div>\\r\\n    <input type=\\\"submit\\\"\\r\\n           value=\\\"Modifier\\\"\\r\\n           [disabled]=\\\"form.invalid\\\" />\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, AsyncValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ValidatorsService } from '../../../../services/validators.service';\r\nimport { StringUtils } from '../../../../utils/string.utils';\r\nimport { TableDTO, TableConfigurationDTO } from '../../../../dto/table.dto';\r\nimport { TranslatorService } from '../../../../services/translator.service';\r\nimport { StateService } from '../../../../services/state.service';\r\nimport { ViewDTO, AdminViewConfigurationDTO } from '../../../../dto/view.dto';\r\nimport { PersitedAbstractFormular } from '../../persisted.abs';\r\n\r\n/** Formulaire d'ajout d'une table */\r\n@Component({\r\n  selector: 'admin-table-edit',\r\n  templateUrl: './table.edit.form.html',\r\n  styleUrls: ['./table.edit.form.less']\r\n})\r\nexport class AdminTableEditFormular extends PersitedAbstractFormular<TableDTO> implements OnInit {\r\n\r\n  @Input()\r\n  public table: TableDTO;\r\n  public lang: string;\r\n\r\n  public form: FormGroup;\r\n  public label: FormControl;\r\n  public code: FormControl;\r\n  public archived: FormControl;\r\n\r\n  public constructor(\r\n    public translator: TranslatorService,\r\n    protected http: HttpClient,\r\n    private state: StateService,\r\n    private router: Router,\r\n    private validators: ValidatorsService) {\r\n\r\n    super(http, \"tables\");\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    /* Création du formulaire */\r\n    this.label = new FormControl(this.translator.tr(this.table.label), [\r\n      Validators.required,\r\n      Validators.minLength(3)]);\r\n    this.code = new FormControl(this.table.code, [\r\n      Validators.required,\r\n      Validators.minLength(3),\r\n      Validators.pattern(/^[a-z0-9_]+$/)\r\n    ], [\r\n        this.validators.check(\"tables/check-code?code=\", this.table.code)\r\n      ]);\r\n    this.archived = new FormControl(this.table.configuration.archived, []);\r\n    this.form = new FormGroup({\r\n      label: this.label,\r\n      code: this.code,\r\n      archived: this.archived\r\n    });\r\n  }\r\n\r\n  protected check(): boolean {\r\n    return this.form.valid;\r\n  }\r\n\r\n  protected provide(): TableDTO {\r\n    let result = new TableDTO();\r\n    result.id = this.table.id;\r\n    result.label = this.translator.edit(result.label, this.label.value);\r\n    result.code = this.code.value;\r\n    result.configuration = new TableConfigurationDTO();\r\n    result.configuration.archived = this.archived.value;\r\n    return result;\r\n  }\r\n\r\n  protected digest(entity: TableDTO): void {\r\n    entity.fields = this.table.fields;\r\n    this.state.publishTable(entity);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Input, OnInit } from \"@angular/core\";\r\n\r\nimport { TableDTO } from \"src/app/dto/table.dto\";\r\nimport { EntityDTO } from \"../../dto/entity.dto\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n/** Classe abstraite descriptive d'un formulaire permettant l'ajout et/ou la mise à jour\r\n *  d'une entité persitante en base.\r\n *  Le composant permet de réaliser des appels au serveur sur la base de deux modes :\r\n *  insertion (à l'URL '{prefix}/add') et mise à jour ('{prefix}/update'). Le préfixe\r\n *  utilisé est fixé directement par les classes héritantes.\r\n *  Par défaut, la classe réalise un premier appel au serveur (via la méthode 'submit()')\r\n *  en mode d'insertion et les suivants en mode de mise à jour. La classe fille peut toutefois\r\n *  forcer le comportement de chaque appel. */\r\nexport abstract class PersitedAbstractFormular<TEntity extends EntityDTO> {\r\n\r\n  public persisted: boolean;\r\n\r\n  public constructor(\r\n    protected http: HttpClient,\r\n    private prefix: string) {\r\n\r\n    this.persisted = false;\r\n  }\r\n\r\n  /** Réalise une action d'ajout. */\r\n  public add(): void {\r\n    this.sync(true);\r\n  }\r\n\r\n  /** Réalise une action de mise à jour. */\r\n  public save(): void {\r\n    this.sync(false);\r\n  }\r\n\r\n  /** Réalise une action d'ajout ou de mise à jour. */\r\n  public submit(): void {\r\n    this.sync(!this.persisted);\r\n  }\r\n\r\n  /** Indique si la synchronisation peut avoir lieu. */\r\n  protected abstract check(): boolean;\r\n  \r\n  /** Génère et retourne une instance de l'entité portée par le formulaire reflétant le contenu\r\n   *  attendu côté serveur pour permettre insertion ou mise à jour. */\r\n  protected abstract provide(): TEntity;\r\n  \r\n  /**\r\n   *  Intègre une instance de l'entité renvoyée par le serveur à la suite d'une insertion ou\r\n   *  d'une mise à jour.\r\n   *  @param entity Entité retournée par le serveur.\r\n   *  @param add Action réalisée (ajout ou mise à jour).\r\n   */\r\n  protected abstract digest(entity: TEntity, add: boolean): void;\r\n\r\n  /**\r\n   * Synchronise l'entité avec le serveur.\r\n   * @param add true pour réaliser un ajout, false sinon.\r\n   */\r\n  private sync(add: boolean): void {\r\n    if (this.check()) {\r\n      let action = add ? \"add\" : \"update\";\r\n      let instance = this.provide();\r\n      this.http\r\n        .post<TEntity>(this.prefix + \"/\" + action, instance)\r\n        .subscribe((data) => {\r\n          this.persisted = false;\r\n          this.digest(data, add);\r\n        });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"popin\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"","module.exports = \"div.popin {\\n  background: red;\\n  color: white;\\n  left: 48px;\\n  position: fixed;\\n  top: 48px;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationStart } from '@angular/router';\r\n\r\n/** Fenêtre pop-in */\r\n@Component({\r\n  selector: 'layout-popin',\r\n  templateUrl: './popin.cpn.html',\r\n  styleUrls: ['./popin.cpn.less']\r\n})\r\nexport class LayoutPopinComponent implements OnInit {\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n  <h1>\\r\\n    <span>yo {{ credentials.user.login }}</span>\\r\\n    {{ error }} {{ error != null }}\\r\\n  </h1>\\r\\n  <router-outlet></router-outlet>\\r\\n  <layout-popin *ngIf=\\\"error\\\">\\r\\n    <p>{{ translator.translate(error.message) }}</p>\\r\\n    <p (click)=\\\"error = null\\\">Fermer !</p>\\r\\n  </layout-popin>\\r\\n  <div id=\\\"loader\\\" *ngIf=\\\"loading\\\">Chargement</div>\\r\\n</div>\\r\\n\"","module.exports = \"div#loader {\\n  background: #444;\\n  bottom: 0;\\n  color: white;\\n  font-weight: bold;\\n  position: fixed;\\n  right: 0;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationStart } from '@angular/router';\r\n\r\nimport { TranslatorService } from '../../services/translator.service';\r\nimport { LoaderInterceptor } from '../../internals/loader.interceptor';\r\nimport { ExceptionsInterceptor } from '../../internals/exceptions.interceptor';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { AuthenticationSessionDTO } from '../../dto/authentication.session.dto';\r\nimport { ErrorDTO } from '../../dto/error.dto';\r\n\r\n/** Racine de l'application */\r\n@Component({\r\n  selector: 'layout-root',\r\n  templateUrl: './root.cpn.html',\r\n  styleUrls: ['./root.cpn.less']\r\n})\r\nexport class LayoutRootComponent implements OnInit {\r\n\r\n  public credentials: AuthenticationSessionDTO;\r\n  public loading: boolean;\r\n  public error: ErrorDTO;\r\n\r\n  public constructor(\r\n    public translator: TranslatorService,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private loader: LoaderInterceptor,\r\n    private exceptions: ExceptionsInterceptor,\r\n    private authentication: AuthenticationService) {\r\n\r\n    this.credentials = new AuthenticationSessionDTO();\r\n    this.loading = false;\r\n    this.error = null;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    // Démo\r\n    this.http.get(\"demo\").subscribe();\r\n\r\n    // Suivi des autorisations\r\n    this.authentication\r\n      .getCredentials()\r\n      .subscribe((data) => {\r\n        this.credentials = data;\r\n        this.checkCredentials(this.router.url);\r\n      });\r\n    this.router\r\n      .events\r\n      .subscribe((data) => {\r\n        if (data instanceof NavigationStart) {\r\n          this.checkCredentials(data.url);\r\n        }\r\n      });\r\n\r\n    // Suivi du chargement\r\n    this.loader\r\n      .getLoader()\r\n      .subscribe((data) => {\r\n        this.loading = data;\r\n      });\r\n\r\n    // Suivi des erreurs\r\n    this.exceptions\r\n      .getFailures()\r\n      .subscribe((data) => {\r\n        this.error = data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Vérifie les droits d'accès et redirige vers la page de login.\r\n   * @param url URL courante.\r\n   */\r\n  private checkCredentials(url: string) {\r\n    if (url != \"/login\" && !this.credentials.connected) {\r\n      this.router.navigate([\"login\"]);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <h2>Salut mec</h2>\\r\\n  <p>Choisis une vue.</p>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let view of views\\\"\\r\\n        [routerLink]=\\\"['/view', view.id]\\\">{{ view.id }} : {{ translator.tr(view.label) }}</li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, AfterViewInit, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { StateService } from '../../services/state.service';\r\nimport { ViewDTO, AbstractViewConfigurationDTO } from '../../dto/view.dto';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { TranslatorService } from '../../services/translator.service';\r\n\r\n/** Page d'accueil */\r\n@Component({\r\n  selector: 'pages-home',\r\n  templateUrl: './home.cpn.html',\r\n  styleUrls: ['./home.cpn.less']\r\n})\r\nexport class PageHomeComponent {\r\n\r\n  public views: ViewDTO<AbstractViewConfigurationDTO>[];\r\n\r\n  public constructor(\r\n    public state: StateService,\r\n    public router: Router,\r\n    public authentication: AuthenticationService,\r\n    public translator: TranslatorService,\r\n    private ar: ActivatedRoute) {\r\n\r\n    this.views = [];\r\n\r\n    // onInit broken\r\n    this.state\r\n      .getViews()\r\n      .subscribe((views) => {\r\n        this.views = views;\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <h2>Connexion</h2>\\r\\n  <form>\\r\\n    <div>\\r\\n      <label>Login</label>\\r\\n      <input type=\\\"text\\\"\\r\\n             name=\\\"name\\\"\\r\\n             [(ngModel)]=\\\"name\\\" />\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>Mot de passe</label>\\r\\n      <input type=\\\"password\\\"\\r\\n             name=\\\"password\\\"\\r\\n             [(ngModel)]=\\\"password\\\" />\\r\\n    </div>\\r\\n    <input type=\\\"button\\\"\\r\\n           name=\\\"submit\\\"\\r\\n           value=\\\"Connexion\\\"\\r\\n           (click)=\\\"authentication.connect(name, password)\\\" />\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"div {\\n  background: pink;\\n}\\ndiv > h2 {\\n  color: red;\\n}\\n\"","import { Component, AfterViewInit, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { StateService } from '../../services/state.service';\r\n\r\n/** Mire de connexion */\r\n@Component({\r\n  selector: 'pages-login',\r\n  templateUrl: './login.cpn.html',\r\n  styleUrls: ['./login.cpn.less']\r\n})\r\nexport class PageLoginComponent {\r\n\r\n  public name: string;\r\n  public password: string;\r\n  \r\n  public constructor(\r\n    public authentication: AuthenticationService,\r\n    private state: StateService,\r\n    private router: Router,\r\n    private ar: ActivatedRoute) {\r\n    \r\n    // onInit broken\r\n    this.authentication\r\n      .getCredentials()\r\n      .subscribe((data) => {\r\n        if (data.connected) {\r\n          this.state\r\n            .loadState()\r\n            .subscribe((data) => {\r\n              this.router.navigate([\"home\"]);\r\n            });\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { ActivatedRoute, Router, Params } from \"@angular/router\";\r\n\r\nimport { StateService } from \"../../services/state.service\";\r\nimport { AbstractViewConfigurationDTO, ViewDTO } from \"../../dto/view.dto\";\r\nimport { combineLatest } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n/** Vue abstraite */\r\nexport abstract class PagesViewAbstractComponent<TView extends AbstractViewConfigurationDTO> {\r\n\r\n  public views: ViewDTO<AbstractViewConfigurationDTO>[];\r\n  public view: ViewDTO<TView>;\r\n\r\n  public constructor(\r\n    protected redirect: boolean,\r\n    protected state: StateService,\r\n    protected router: Router,\r\n    protected ar: ActivatedRoute) {\r\n\r\n    combineLatest(this.ar.params, this.state.getViews())\r\n      .subscribe(([params, views]) => {\r\n        /* Récupération de la vue */\r\n        this.views = views;\r\n        this.view = <ViewDTO<TView>>views.filter((v) => v.id == params[\"view\"])[0];\r\n\r\n        /* Redirection */\r\n        if (this.redirect) {\r\n          this.router.navigate(\r\n            [\"/view\", this.view.id, this.view.configuration.type.toLowerCase()],\r\n            {\r\n              skipLocationChange: true\r\n            });\r\n        }\r\n      });\r\n    \r\n    /*\r\n    this.ar.params.subscribe((params) => {\r\n      // onInit broken\r\n      this.state\r\n        .getViews()\r\n        .subscribe((views) => {\r\n          /* Récupération de la vue *\r\n          this.views = views;\r\n          this.view = <ViewDTO<TView>>views.filter((v) => v.id == params[\"view\"])[0];\r\n\r\n          /* Redirection *\r\n          if (this.redirect) {\r\n            this.router.navigate(\r\n              [\"/view\", this.view.id, this.view.configuration.type.toLowerCase()],\r\n              {\r\n                skipLocationChange: true\r\n              });\r\n          }\r\n        });\r\n    });*/\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <h2>Chargement en cours {{ view.id }}</h2>\\r\\n</div>\\r\\n\"","module.exports = \"div {\\n  background: pink;\\n}\\ndiv > h2 {\\n  color: red;\\n}\\n\"","import { Component, AfterViewInit, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { StateService } from '../../services/state.service';\r\nimport { AbstractViewConfigurationDTO } from '../../dto/view.dto';\r\nimport { PagesViewAbstractComponent } from './view.abs';\r\n\r\n/** Affichage d'une vue */\r\n@Component({\r\n  selector: 'pages-view',\r\n  templateUrl: './view.cpn.html',\r\n  styleUrls: ['./view.cpn.less']\r\n})\r\nexport class PageViewComponent extends PagesViewAbstractComponent<AbstractViewConfigurationDTO> {\r\n  \r\n  public constructor(\r\n    protected state: StateService,\r\n    protected router: Router,\r\n    protected ar: ActivatedRoute) {\r\n\r\n    super(true, state, router, ar);\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <h3>Liste des vues</h3>\\r\\n  <div>Ajouter</div>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let view of views\\\">\\r\\n      <div>{{ view.Id }} {{ translator.tr(view.label) }}</div>\\r\\n      <div>\\r\\n        <span>Editer</span>\\r\\n        <span>Supprimer</span>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <p>Créer une vue</p>\\r\\n  <h3>Liste des tables</h3>\\r\\n  <div [routerLink]=\\\"['model', 'add-table']\\\">Ajouter</div>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let table of tables\\\">\\r\\n      <div>{{ table.id }} {{ translator.tr(table.label) }}</div>\\r\\n      <div>\\r\\n        <span [routerLink]=\\\"['model', 'edit-table', table.id]\\\">Editer</span>\\r\\n        <span>Supprimer</span>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PagesViewAbstractComponent } from '../view.abs';\r\nimport { AdminViewConfigurationDTO } from '../../../dto/view.dto';\r\nimport { TableDTO } from '../../../dto/table.dto';\r\nimport { TranslatorService } from '../../../services/translator.service';\r\nimport { StateService } from '../../../services/state.service';\r\n\r\n/** Vue administrateur */\r\n@Component({\r\n  selector: 'pages-view-admin',\r\n  templateUrl: './admin.cpn.html',\r\n  styleUrls: ['./admin.cpn.less']\r\n})\r\nexport class PagesViewAdminComponent extends PagesViewAbstractComponent<AdminViewConfigurationDTO> {\r\n\r\n  public tables: TableDTO[];\r\n\r\n  public constructor(\r\n    public translator: TranslatorService,\r\n    protected state: StateService,\r\n    protected router: Router,\r\n    protected ar: ActivatedRoute) {\r\n\r\n    super(false, state, router, ar);\r\n\r\n    // onInit broken\r\n    this.state\r\n      .getTables()\r\n      .subscribe((data) => {\r\n        this.tables = data;\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n  <h2>Table</h2>\\r\\n  <div class=\\\"column\\\">\\r\\n    <div *ngIf=\\\"action == 'add-table'\\\">\\r\\n      <h3>Créer une table</h3>\\r\\n      <admin-table-add></admin-table-add>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"action != 'add-table'\\\">\\r\\n      <h3 [routerLink]=\\\"['../../edit-table', table.id]\\\">Modifier une table</h3>\\r\\n      <div>\\r\\n        <h4>{{ translator.tr(table.label) }}</h4>\\r\\n        <p>{{ table.code }}</p>\\r\\n      </div>\\r\\n      <h3>Champs</h3>\\r\\n      <div>\\r\\n        <p>\\r\\n          <span [routerLink]=\\\"['../../add-field', table.id]\\\">Ajouter</span>\\r\\n        </p>\\r\\n        <admin-field-add *ngIf=\\\"action == 'add-field'\\\" [table]=\\\"table\\\"></admin-field-add>\\r\\n        <p *ngIf=\\\"table.fields.length == 0\\\">Aucun champ référencé</p>\\r\\n        <ul *ngIf=\\\"table.fields.length > 0\\\">\\r\\n          <li *ngFor=\\\"let f of table.fields\\\"\\r\\n              [routerLink]=\\\"['../../edit-field', f.id]\\\"\\r\\n              (click)=\\\"field = f\\\">{{ translator.translate(f.label) }} de type {{ f.configuration.type }}</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"column\\\" *ngIf=\\\"action == 'edit-table'\\\">\\r\\n    <admin-table-edit [table]=\\\"table\\\"></admin-table-edit>\\r\\n  </div>\\r\\n  <div class=\\\"column\\\" *ngIf=\\\"action == 'edit-field'\\\">\\r\\n    <admin-field-edit [field]=\\\"field\\\"></admin-field-edit>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"div div.column {\\n  display: inline-block;\\n  vertical-align: top;\\n  width: 40%;\\n}\\ndiv div.column:last-child {\\n  border-left: 1px solid black;\\n  padding-left: 4px;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, AsyncValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { map  } from 'rxjs/operators';\r\n\r\nimport { PagesViewAbstractComponent } from '../../view.abs';\r\nimport { AdminViewConfigurationDTO } from '../../../../dto/view.dto';\r\nimport { TableDTO } from '../../../../dto/table.dto';\r\nimport { TranslatorService } from '../../../../services/translator.service';\r\nimport { StateService } from '../../../../services/state.service';\r\nimport { BundleDTO } from '../../../../dto/bundle.dto';\r\nimport { StringUtils } from '../../../../utils/string.utils';\r\nimport { ValidatorsService } from '../../../../services/validators.service';\r\nimport { FieldDTO, AbstractFieldConfigurationDTO } from '../../../../dto/field.dto';\r\n\r\n/** Edition d'une table */\r\n@Component({\r\n  selector: 'pages-view-admin-table-edit',\r\n  templateUrl: './table.edit.cpn.html',\r\n  styleUrls: ['./table.edit.cpn.less']\r\n})\r\nexport class PagesViewAdminTableEditComponent extends PagesViewAbstractComponent<AdminViewConfigurationDTO> {\r\n\r\n  public action: string;\r\n  public table: TableDTO;\r\n  public field: FieldDTO<AbstractFieldConfigurationDTO>;\r\n\r\n  public constructor(\r\n    protected state: StateService,\r\n    protected router: Router,\r\n    protected ar: ActivatedRoute,\r\n    private translator: TranslatorService) {\r\n\r\n    super(false, state, router, ar);\r\n\r\n    // onInit broken\r\n    this.ar.params.subscribe((params) => {\r\n      this.action = params[\"action\"];\r\n    });\r\n\r\n    combineLatest(this.ar.params, this.state.getTables(), this.state.getFields())\r\n      .subscribe(([params, tables, fields]) => {\r\n        switch (params[\"action\"]) {\r\n          case \"edit-table\":\r\n          case \"add-field\":\r\n            this.table = tables.filter((t) => t.id == params[\"id\"])[0];\r\n            this.field = null;\r\n            break;\r\n          case \"edit-field\":\r\n            this.field = fields.filter((f) => f.id == params[\"id\"])[0];\r\n            this.table = this.field.table;\r\n            break;\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { UserDTO } from \"./user.dto\";\r\n\r\nexport class AuthenticationSessionDTO {\r\n  public connected: boolean = false;\r\n  public token: string = \"\";\r\n  public user: UserDTO = new UserDTO();\r\n}\r\n","export class BundleDTO {\n  public data: BundleDataDTO = new BundleDataDTO();\n}\n\nexport class BundleDataDTO {\n  public FRA: string = \"\";\n  public ENG: string = \"\";\r\n}\r\n","export class EntityDTO {\r\n  public id: string = \"00000000-0000-0000-0000-000000000000\";\r\n}\r\n","import { BundleDTO } from \"./bundle.dto\";\r\nimport { TableDTO } from \"./table.dto\";\r\nimport { PersistedDTO, GenericPersistedDTO } from \"./persisted.dto\";\r\nimport { EntityDTO } from \"./entity.dto\";\r\n\r\nexport class FieldDTO<TField extends AbstractFieldConfigurationDTO> extends EntityDTO {\r\n  public label: BundleDTO = new BundleDTO();\r\n  public code: string = \"\";\r\n  public configuration: TField = null;\r\n  public table: TableDTO = new TableDTO();\r\n}\r\n\r\nexport class AbstractFieldConfigurationDTO extends GenericPersistedDTO {\r\n  public archived: boolean = true;\r\n}\r\n\r\nexport class StringFieldConfigurationDTO extends AbstractFieldConfigurationDTO {\r\n  public constructor() { super(\"STRING\"); }\r\n}\r\n\r\nexport class BooleanFieldConfigurationDTO extends AbstractFieldConfigurationDTO {\r\n  public constructor() { super(\"BOOLEAN\"); }\r\n}\r\n\r\nexport class NumericFieldConfigurationDTO extends AbstractFieldConfigurationDTO {\r\n  public constructor() { super(\"NUMERIC\"); }\r\n}\r\n\r\nexport class DateFieldConfigurationDTO extends AbstractFieldConfigurationDTO {\r\n  public constructor() { super(\"DATE\"); }\r\n}\r\n\r\nexport class ReferenceFieldConfigurationDTO extends AbstractFieldConfigurationDTO {\r\n  public constructor() { super(\"REFERENCE\"); }\r\n}\r\n","export abstract class PersistedDTO {\r\n}\r\n\r\nexport abstract class GenericPersistedDTO {\r\n  public constructor(public type: string = \"\") {}\r\n}\r\n","import { BundleDTO } from \"./bundle.dto\";\r\nimport { FieldDTO, AbstractFieldConfigurationDTO } from \"./field.dto\";\r\nimport { PersistedDTO } from \"./persisted.dto\";\r\nimport { EntityDTO } from \"./entity.dto\";\r\n\r\nexport class TableDTO extends EntityDTO {\r\n  public label: BundleDTO = new BundleDTO();\r\n  public code: string = \"\";\r\n  public configuration: TableConfigurationDTO = new TableConfigurationDTO();\r\n  public fields: FieldDTO<AbstractFieldConfigurationDTO>[];\r\n}\r\n\r\nexport class TableConfigurationDTO extends PersistedDTO {\r\n  public archived: boolean = false;\r\n}\r\n","export class UserDTO {\r\n  public login: string = \"\";\r\n  public email: string = \"\";\r\n  public configuration: UserConfigurationDTO = new UserConfigurationDTO();\r\n}\r\n\r\nexport class UserConfigurationDTO {\r\n  public culture: string = \"FRA\";\r\n}\r\n","import { ErrorHandler } from \"@angular/core\";\r\n\r\nexport class ExceptionsHandler extends ErrorHandler {\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  public handleError(error: any): void {\r\n    console.log(error);\r\n    alert(\"Ouch !\");\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest, HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable, Subject, BehaviorSubject, observable } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { AuthenticationSessionDTO } from \"../dto/authentication.session.dto\";\r\nimport { ErrorDTO } from \"../dto/error.dto\";\r\n\r\nimport { map } from \"rxjs/operators\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n/** Gestion de l'indicateur de chargement */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExceptionsInterceptor implements HttpInterceptor {\r\n\r\n  private failures: Subject<ErrorDTO>;\r\n\r\n  public constructor(\r\n    private router: Router) {\r\n    this.failures = new Subject()\r\n  }\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next\r\n      .handle(request)\r\n      .pipe(catchError((response: HttpErrorResponse, data: Observable<ErrorDTO>) => {\r\n        this.failures.next(response.error);\r\n        return Observable.create((observer) => {\r\n          observer.next(response.error);\r\n          observer.complete();\r\n        });\r\n      }));\r\n  }\r\n\r\n  public getFailures(): Observable<ErrorDTO> {\r\n    return this.failures.asObservable();\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { Observable, Subject, BehaviorSubject } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { AuthenticationSessionDTO } from \"../dto/authentication.session.dto\";\r\n\r\nimport { map } from \"rxjs/operators\";\r\n\r\n/** Gestion de l'indicateur de chargement */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n\r\n  private count: number;\r\n  private loader: Subject<boolean>;\r\n\r\n  public constructor() {\r\n    this.count = 0;\r\n    this.loader = new BehaviorSubject(false);\r\n  }\r\n\r\n  /** Retourne le statut courant du chargement */\r\n  public getLoader(): Observable<boolean> {\r\n    return this.loader.asObservable();\r\n  }\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next\r\n      .handle(request)\r\n      .pipe(map((data) => {\r\n        if (data.type == 0) {\r\n          /* Dafuq */\r\n          this.count++;\r\n          if (this.count == 1) {\r\n            this.loader.next(true);\r\n          }\r\n        } else {\r\n          this.count--;\r\n          if (this.count == 0) {\r\n            this.loader.next(false);\r\n          }\r\n        }\r\n        return data;\r\n      }));\r\n  }\r\n\r\n}\r\n","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { Observable, Subject, BehaviorSubject } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { AuthenticationSessionDTO } from \"../dto/authentication.session.dto\";\r\n\r\nimport { map } from \"rxjs/operators\";\r\n\r\n/** Gestion de l'indicateur de chargement */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReferencesInterceptor implements HttpInterceptor {\r\n\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next\r\n      .handle(request)\r\n      .pipe(map((data) => {\r\n        try {\r\n          if (data instanceof HttpResponse) {\r\n            let typed = <HttpResponse<any>>data;\r\n            let index = {};\r\n            if (typed.body != null) {\r\n              this.register(index, typed.body);\r\n              this.attach(index, typed.body);\r\n            }\r\n          }\r\n          return data;\r\n        } catch (ex) {\r\n          throw new Error(\"References construction failed...\");\r\n        }\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * Enregistre les identifiants d'un objet et de ses enfants.\r\n   * @param index Index.\r\n   * @param object Objet référencé.\r\n   */\r\n  private register(index: any, object: any): void {\r\n    if (object[\"$ref\"] == null) {\r\n      // Enregistrement\r\n      if (object[\"$id\"] != null) {\r\n        index[object[\"$id\"]] = object;\r\n      }\r\n\r\n      // Traitement des enfants\r\n      Object.keys(object).forEach((key) => {\r\n        if (typeof object[key] === \"object\" && object[key] != null) {\r\n          this.register(index, object[key]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Rattache les références avec les instances réelles.\r\n   *  @param index Index.\r\n   *  @param object Objet rattaché.\r\n   */\r\n  private attach(index: any, object: any): any {\r\n    if (object[\"$ref\"] == null) {\r\n      // Traitement des enfants\r\n      Object.keys(object).forEach((key) => {\r\n        if (typeof object[key] === \"object\" && object[key] != null) {\r\n          let buffer = this.attach(index, object[key]);\r\n          if (buffer != null) {\r\n            object[key] = buffer;\r\n          }\r\n        }\r\n      });\r\n      return null;\r\n    } else {\r\n      return index[object[\"$ref\"]];\r\n    }\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { AuthenticationSessionDTO } from \"../dto/authentication.session.dto\";\r\n\r\n/* Redirection des requêtes sortantes vers \"/services/..\" */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RootInterceptor implements HttpInterceptor {\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const event = request.clone({\r\n      url: \"services/\" + request.url\r\n    });\r\n    return next.handle(event);\r\n  }\r\n\r\n}\r\n","import { HttpInterceptor, HttpHandler, HttpEvent, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../services/authentication.service\";\r\nimport { AuthenticationSessionDTO } from \"../dto/authentication.session.dto\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n/** Gestion du jeton */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  private credentials: AuthenticationSessionDTO;\r\n\r\n  public constructor(\r\n    private authentication: AuthenticationService) {\r\n\r\n    this.credentials = new AuthenticationSessionDTO();\r\n    this.authentication\r\n      .getCredentials()\r\n      .subscribe((data) => {\r\n        this.credentials = data;\r\n      });\r\n  }\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.credentials.connected) {\r\n      const modified = request.clone({\r\n        setHeaders: {\r\n          'token': this.credentials.token\r\n        }\r\n      });\r\n      return next.handle(modified);\r\n    } else {\r\n      return next.handle(request);\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\n\r\nimport { AuthenticationSessionDTO } from '../dto/authentication.session.dto';\r\nimport { UserDTO } from '../dto/user.dto';\r\nimport { StateService } from './state.service';\r\n\r\n/** Service d'authentification */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  private credentials: Subject<AuthenticationSessionDTO>\r\n\r\n  public constructor(\r\n    private http: HttpClient,\r\n    private state: StateService) {\r\n    this.credentials = new BehaviorSubject(new AuthenticationSessionDTO());\r\n  }\r\n\r\n  /** Retourne le droits d'accès courants */\r\n  public getCredentials(): Observable<AuthenticationSessionDTO> {\r\n    return this.credentials.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Tente une connexion\r\n   * @param name Login ou e-mail de l'utilisateur.\r\n   * @param password Mot de passe.\r\n   */\r\n  public connect(name: string, password: string): void {\r\n    if (name && password) {\r\n      this.http\r\n        .get<AuthenticationSessionDTO>(\"auth/connect?name=\" + name + \"&password=\" + password)\r\n        .subscribe((data) => {\r\n          this.credentials.next(data);\r\n          this.state.loadState();\r\n        });\r\n    } else {\r\n      throw new Error(\"Missing argument\");\r\n    }\r\n  }\r\n\r\n  /** Procède à la déconnexion. */\r\n  public disconnect(): void {\r\n    this.credentials.next(new AuthenticationSessionDTO());\r\n    this.http.get<AuthenticationSessionDTO>(\"auth/disconnect\");\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, forkJoin, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { ViewDTO, AbstractViewConfigurationDTO } from '../dto/view.dto';\r\nimport { TableDTO } from '../dto/table.dto';\r\nimport { FieldDTO, AbstractFieldConfigurationDTO } from '../dto/field.dto';\r\n\r\n/** Service d'état */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateService {\r\n\r\n  private viewsSubject: Subject<ViewDTO<AbstractViewConfigurationDTO>[]>\r\n  private viewsState: ViewDTO<AbstractViewConfigurationDTO>[];\r\n  private tablesSubject: Subject<TableDTO[]>\r\n  private tablesState: TableDTO[];\r\n\r\n  constructor(\r\n    public http: HttpClient) {\r\n\r\n    this.viewsSubject = new BehaviorSubject([]);\r\n    this.viewsState = [];\r\n    this.tablesSubject = new BehaviorSubject([]);\r\n    this.tablesState = [];\r\n  }\r\n\r\n  /** Retourne la liste des vues */\r\n  public getViews(): Observable<ViewDTO<AbstractViewConfigurationDTO>[]> {\r\n    return this.viewsSubject.asObservable();\r\n  }\r\n\r\n  /** Retourne la liste des tables */\r\n  public getTables(): Observable<TableDTO[]> {\r\n    return this.tablesSubject.asObservable();\r\n  }\r\n\r\n  /** Retourne la liste des champs */\r\n  public getFields(): Observable<FieldDTO<AbstractFieldConfigurationDTO>[]> {\r\n    return this.tablesSubject\r\n      .pipe(map((data) => {\r\n        let result: FieldDTO<AbstractFieldConfigurationDTO>[] = [];\r\n        for (let table of data) {\r\n          for (let field of table.fields) {\r\n            result.push(field);\r\n          }\r\n        }\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * Publie la liste des tables.\r\n   * @param tables Tables publiées.\r\n   */\r\n  public publishTables(tables: TableDTO[]): void {\r\n    this.tablesSubject.next(tables);\r\n  }\r\n\r\n  /**\r\n   * Publie (ajout ou mise à jour) une table unitaire.\r\n   * @param table Table publiée.\r\n   */\r\n  public publishTable(table: TableDTO): void {\r\n    let pre = this.tablesState.filter(e => e.id == table.id);\r\n    if (pre.length == 0) {\r\n      this.tablesState.push(table);\r\n    } else {\r\n      let idx = this.tablesState.indexOf(pre[0]);\r\n      this.tablesState[idx] = table;\r\n    }\r\n    this.tablesSubject.next(this.tablesState);\r\n  }\r\n\r\n  /**\r\n   * Publie (ajout ou mise à jour) un champ unitaire.\r\n   *  @param field Champ publié.\r\n   */\r\n  public publishField(field: FieldDTO<AbstractFieldConfigurationDTO>) {\r\n    if (field.table == null) {\r\n      throw new Error(\"Field has to be attached to a table in order to be published\");\r\n    }\r\n\r\n    var table = this.tablesState.filter(e => e.id == field.table.id)[0];\r\n    var pre = table.fields.filter(e => e.id == field.id);\r\n\r\n    if (pre.length == 0) {\r\n      table.fields.push(field);\r\n    } else {\r\n      let idx = table.fields.indexOf(pre[0]);\r\n      table.fields[idx] = field;\r\n    }\r\n    this.tablesSubject.next(this.tablesState);\r\n  }\r\n\r\n  /** Charge l'état complet de l'application */\r\n  public loadState(): Observable<any> {\r\n    return forkJoin(\r\n      this.loadViews(),\r\n      this.loadTables());\r\n  }\r\n\r\n  /** Recharge les vues */\r\n  public loadViews(): Observable<ViewDTO<AbstractViewConfigurationDTO>[]> {\r\n    return this.http\r\n      .get<ViewDTO<AbstractViewConfigurationDTO>[]>(\"views/list\")\r\n      .pipe(map((data) => {\r\n        this.viewsState = data;\r\n        this.viewsSubject.next(data);\r\n        return data;\r\n      }));\r\n  }\r\n\r\n  /** Recharge les tables */\r\n  public loadTables(): Observable<TableDTO[]> {\r\n    return this.http\r\n      .get<TableDTO[]>(\"tables/list\")\r\n      .pipe(map((data) => {\r\n        this.tablesState = data;\r\n        this.tablesSubject.next(data);\r\n        return data;\r\n      }));\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, forkJoin, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { ViewDTO } from '../dto/view.dto';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { AuthenticationSessionDTO } from '../dto/authentication.session.dto';\r\nimport { BundleDTO } from '../dto/bundle.dto';\r\n\r\n/** Service de traduction */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslatorService {\r\n\r\n  private credentials: AuthenticationSessionDTO;\r\n  private lang: string;\r\n\r\n  constructor(\r\n    private authentication: AuthenticationService) {\r\n\r\n    this.authentication\r\n      .getCredentials()\r\n      .subscribe((data) => {\r\n        this.credentials = data;\r\n        this.lang = data.user.configuration.culture;\r\n      });\r\n  }\r\n\r\n  /** Retourne la langue de l'utilisateur */\r\n  public getLang(): Observable<string> {\r\n    return this.authentication\r\n      .getCredentials()\r\n      .pipe(map((data) => {\r\n        return data.user.configuration.culture;\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * Retourne la traduction appropriée pour un lot de traductions.\r\n   * @param bundle Lot de traductions\r\n   */\r\n  public translate(bundle: BundleDTO): string {\r\n    return bundle.data[this.lang] ? bundle.data[this.lang] : \"?\";\r\n  }\r\n  public tr(bundle: BundleDTO): string {\r\n    return this.translate(bundle);\r\n  }\r\n\r\n  /**\r\n   * Modifie la valeur d'un lot de traductions correspondant à la culture de\r\n   * l'utilisateur courant.\r\n   * @param bundle Lot de traductions.\r\n   * @param value Valeur affectée.\r\n   */\r\n  public edit(bundle: BundleDTO, value: string): BundleDTO {\r\n    bundle.data[this.lang] = value;\r\n    return bundle;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AsyncValidatorFn, AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\nimport { Observable, timer, from, Subject } from \"rxjs\";\r\nimport { debounce, distinctUntilChanged, map, delay, switchMap, combineLatest, first } from \"rxjs/operators\";\r\n\r\n/** Services de validation */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidatorsService {\r\n\r\n  public constructor(\r\n    private http: HttpClient) {\r\n  }\r\n\r\n  /**\r\n   * Fonction de validation d'une valeur via un service retournant un\r\n   * booléen.\r\n   * @param prefix Préfixe de l'URL appelée (concaténée avec la valeur).\r\n   * @param init Valeur initiale.\r\n   */\r\n  public check(prefix: string, init: string = null): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      try {\r\n\r\n        if (init != null && control.value == init) {\r\n          console.log(\"go through !\");\r\n          return from([null]);\r\n        } else {\r\n          console.log(\"check...\");\r\n          return timer(250)\r\n            .pipe(switchMap((data) => {\r\n              return this.http\r\n                .get<boolean>(prefix + control.value)\r\n                .pipe(map((data) => {\r\n                  console.log(data);\r\n                  return data ? null : [\"Check failed\"];\r\n                }));\r\n            }));\r\n        }\r\n      }\r\n      catch (ex) {\r\n        throw new Error(\"Error validating code...\");\r\n      }\r\n\r\n      /*\r\n      return timer(250)\r\n        .pipe(switchMap((data) => {\r\n          if (init != null && control.value == init) {\r\n            console.log(\"go through !\");\r\n            return Observable.create(null);\r\n          } else {\r\n            console.log(\"check...\");\r\n            return this.http\r\n              .get<boolean>(prefix + control.value)\r\n              .pipe(map((data) => {\r\n                return data ? null : [\"Check failed\"];\r\n              }));\r\n          }\r\n        }));*/\r\n    };\r\n  }\r\n}\r\n","export class StringUtils {\r\n\r\n  /**\r\n   * Retraite une chaîne de caractère pour en faire un code pseudo-SQL correct.\r\n   * @param value Valeur traitée.\r\n   */\r\n  public static StringToCode(value: string): string {\r\n    return value\r\n      .replace(new RegExp(\"[^a-zA-Z0-9]+\", \"g\"), \"_\")\r\n      .toLowerCase();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}